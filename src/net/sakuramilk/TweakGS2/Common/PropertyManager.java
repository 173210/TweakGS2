package net.sakuramilk.TweakGS2.Common;

import java.io.File;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.Set;

public abstract class PropertyManager {
    
    SysFs mSysFs;
    
    protected PropertyManager(String filePath) {
        mSysFs = new SysFs(filePath);
    }
    
    public boolean exists() {
        File file = new File(mSysFs.getPath());
        return file.exists();
    }
    
    public String getValue(String key) {
        File file = new File(mSysFs.getPath());
        if (!file.exists()) return null;
        if (file.length() == 0) return null;
        
        String propString[] = mSysFs.read();
        if (propString != null) {
            for (String prop : propString) {
                String keyValue[] = prop.split("=");
                if (key.equals(keyValue[0])) {
                    return keyValue[1];
                }
            }
        }
        return null;
    }
    
    public void setValue(String key, String value) {
        File file = new File(mSysFs.getPath());
        StringBuilder sb = new StringBuilder();
        if (!file.exists() || file.length() == 0) {
            sb.append("##### AUTO GENERATED BY TweakGS2 #####\n");
            sb.append(key + "=" + value + "\n");
            mSysFs.write(mSysFs.toString());
            return;
        }
        
        String propString[] = mSysFs.read();
        HashMap<String, String> keyValuePair = new HashMap<String, String>();
        
        boolean isFindKey = false;
        for (String prop : propString) {
            String keyValue[] = prop.split("=");
            if (keyValue.length > 1) {
                if (key.equals(keyValue[0])) {
                    isFindKey = true;
                    keyValuePair.put(keyValue[0], value);
                } else {
                    keyValuePair.put(keyValue[0], keyValue[1]);
                }
            }
        }
        if (!isFindKey) {
            keyValuePair.put(key, value);
        }
        
        sb.append("##### AUTO GENERATED BY TweakGS2 #####\n");
        Set<Entry<String, String>> entrySet = keyValuePair.entrySet(); 
        Iterator<Entry<String, String>> entryIte = entrySet.iterator();  
        while(entryIte.hasNext()) {
                Entry<String, String> obj = entryIte.next();
                sb.append(obj.getKey() + "="  + obj.getValue() + "\n");              
        }
        
        mSysFs.write(sb.toString());
    }
}
